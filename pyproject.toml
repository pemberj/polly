[project]
name = "polly-kpf"
version = "0.2"
description = "Analysis code for KPF etalon data"
keywords = [
    "KPF",
    "Keck Planet Finder",
    "high-resolution spectroscopy",
    "radial velocity",
    "RV",
    "data analysis",
    "etalon",
    "chromatic drift",
    ]
authors = [
    { name = "Jake Pember", email = "jake.pember@kuleuven.be" }
    ]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Astronomy",
    ]
requires-python = ">=3.10"
dependencies = [
    "numpy>=2.2.0",
    "astropy>=6.1.7",
    "scipy>=1.14.1",
    "matplotlib>=3.10.0",
    "tqdm>=4.67.1",
    "ipython>=8.30.0",
    "jupyter>=1.1.1",
    "jupyterlab>=4.3.3",
]

[dependency-groups]
dev = [
    "pre-commit>=4.0.1",
]

[project.urls]
Repository = "https://github.com/pemberj/polly"

[build-system]
requires = [
    "hatchling",
    ]
build-backend = "hatchling.build"

[tool.ruff]
show-fixes = true
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "F", # Pyflakes
    "E4", "E7", "E9", # pycodestyle errors
    "W", # pycodestyle warnings
    "D", # pydocstyle

    "UP",   # pyupgrade

    "ANN",  # flake8-annotations
    "S",    # flake8-bandit (security)
    "B",    # flake8-bugbear, security warnings
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "ICN",  # flake8-import-conventions
    "LOG",  # flake8-logging
    "G",    # flake8-logging-format
    "PIE",  # flake8-pie
    "PYI",  # flake8-pyi
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "TC",   # flake8-type-checking
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib

    # "N", # pep8-naming

    "PLC",      # pylint-convention
    "PLE",      # pylint-error
    "PLR2004",  # pylint magic values
    "PLW",      # pylint-warning

    # "FURB", # refurb

    "DOC", # pydoclint

    "RUF", # ruff developers' own rules
]

ignore = [
    "E722", # do not use bare 'except'
    "W605", # invalid escape sequence

    "D105", # Missing docstring in magic (dunder) method
    "D200", # One-line docstring should fit on one line with quotes
    "D202", # No blank lines allowed after function docstring
    "D203", # No blank lines allowed before function docstring
    "D205", # Blank line between summary and description
    "D212", # multi-line docstring summary should start at the first line
    "D400", # first line should end with a period
    "D401", # first line should be in imperative mood
    "D413", # Missing blank line after last section
    "D415", # first line should end with a period, question mark, or exclamation point
    "D417", # Missing argument descriptions in the docstring

    # "F401",   # module imported but unused
    "PERF203",  # try / except within a loopp
    "SIM105",   # recommends contextlib.suppress instead of try / except / pass
    "S101",     # use of assert
    "DTZ001",   # datetime.datetime used without explicit tzinfo=
    "DTZ005",   # datetime.now() used without explicit tzinfo=
]

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = [
    "E501", # line too long
    ]

[tool.ruff.format]
exclude = [
    "*.ipynb",
    ]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
